Script started on Thu 17 Mar 2016 08:02:51 PM UTC
Fony@gke-cluster-r-5ad41d3a-node-yekg:~/rneo4j-centrality$ s[Kxr

R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(RNeo4j)
> library(igraph)

Attaching package: â€˜igraphâ€™

The following objects are masked from â€˜package:statsâ€™:

    decompose, spectrum

The following object is masked from â€˜package:baseâ€™:

    union

> library(igraph)
> library(jsonlite)
> setwd('~/rneo4j-centrality')
> getwd()
[1] "/root/rneo4j-centrality"
> neo4j = startGraph("http://104.197.210.78:7474/db/data/")
> Sys.time()
[1] "2016-03-17 20:03:56 UTC"
> system.time({
+ query =  "
+ MATCH (p1:User)-[:POSTED]->(:Topic)<-[:REPLIED]-(p2:User)
+ WHERE p1.id < p2.id
+ RETURN p1.id, p2.id, COUNT(*) AS weight
+ order by weight desc
+ "
+ data = cypher(neo4j, query)
+ g = graph.data.frame(data, directed = F)
+ })
   user  system elapsed 
 45.804   0.856 320.544 
> system.time({
+ close = estimate_closeness(g,cutoff=-1, weights = NULL)
+ summary(close)
+ maxclose = max(close)
+ })

^C
^C
^C
Fony@gke-cluster-r-5ad41d3a-node-yekg:~/rneo4j-centrality$ 
Fony@gke-cluster-r-5ad41d3a-node-yekg:~/rneo4j-centrality$ xr

R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(RNeo4j)
> library(igraph)

Attaching package: â€˜igraphâ€™

The following objects are masked from â€˜package:statsâ€™:

    decompose, spectrum

The following object is masked from â€˜package:baseâ€™:

    union

> library(igraph)
> library(jsonlite)
> 
> setwd('~/rneo4j-centrality')
> getwd()
[1] "/root/rneo4j-centrality"
> neo4j = startGraph("http://104.197.210.78:7474/db/data/")
> system.time({
+ query =  "
+ MATCH (p1:User)-[:POSTED]->(:Topic)<-[:REPLIED]-(p2:User)
+ WHERE p1.id < p2.id
+ RETURN p1.id, p2.id, COUNT(*) AS weight
+ order by weight desc
+ "
+ data = cypher(neo4j, query)
+ g = graph.data.frame(data, directed = F)
+ })

   user  system elapsed 
 44.884   1.064 374.894 
> 
> system.time({
+ close = estimate_closeness(g,cutoff=-1, weights = NULL,normalize=TRUE)
+ summary(close)
+ maxclose = max(close)
+ })

     user    system   elapsed 
94543.220    27.956 94661.268 
> 
> syse tem.time({
+ save(close, file="closeness_centrality.Rdata")
+ ) })
   user  system elapsed 
  0.400   0.004   0.404 
> getwd()
[1] "/root/rneo4j-centrality"
> à¸« syss> getwd()> })     save(close, file="closeness_centrality.Rdata")> system.time({                                 > system.time({> })           > })maxclose = max(close)> summary(close)       > close = estimate_closeness(g,cutoff=-1, weights = NULL,normalize=TRUE)> system.time({                                                         > system.time({> })           > })g = graph.data.frame(data, directed = F)> data = cypher(neo4j, query)             > "                          > "order by weight desc> RETURN p1.id, p2.id, COUNT(*) AS weight> WHERE p1.id < p2.id                    > MATCH (p1:User)-[:POSTED]->(:Topic)<-[:REPLIED]-(p2:User)> query =  "                                               > query =  "> system.time({> neo4j = startGraph("http://104.197.210.78:7474/db/data/")> getwd()                                                  > getwd()> setwd('~/rneo4j-centrality')> library(jsonlite)           igraph)  jsonlite)> setwd('~/rneo4j-centrality')> getwd()                     > getwd()> neo4j = startGraph("http://104.197.210.78:7474/db/data/")> system.time({                                            > system.time({> query =  "   > MATCH (p1:User)-[:POSTED]->(:Topic)<-[:REPLIED]-(p2:User)> WHERE p1.id < p2.id                                      > WHERE p1.id < p2.id> RETURN p1.id, p2.id, COUNT(*) AS weight> order by weight desc                   > "                   > "data = cypher(neo4j, query)> g = graph.data.frame(data, directed = F)> })                                      > })system.time({> close = estimate_closeness(g,cutoff=-1, weights = NULL,normalize=TRUE)> summary(close)                                                        > summary(close)> maxclose = max(close)> })                   > })system.time({> save(close, file="closeness_centrality.Rdata")> })                                            > })getwd()> syss      ummary(close)
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
5.805e-06 4.504e-04 4.505e-04 4.447e-04 4.505e-04 4.507e-04 
> system.time({
+ for(i in 1:length(close))
+ {
+     unode = getLabeledNodes(neo4j, "User", id = as.integer(names(close[<odes(neo4j, "User", id = as.integer(names(close[i                       ]))) 
+     updateProp(unode[[1]],closeness_centrality = as.numeric(close[[i]])<]],closeness_centrality = as.numeric(close[[i]]))                       
+ }
+ })
    user   system  elapsed 
5075.664  216.152 7917.000 
> 
> system.time({
+ queryu =  "
+ MATCH (p1:User)-[:POSTED]->(:Topic)<-[r:REPLIED]-(p2:User)
+ WHERE p1.id < p2.id
+ RETURN p1.id, p2.id, COUNT(r) AS weight
+ order by weight desc
+ "
+ datau = cypher(neo4j, queryu)
+ gu = graph.data.frame(datau, directed = F)
+ 
+ deg = degree(gu)
+ summary(deg)
+ maxdegree=max(deg)
+ })
   user  system elapsed 
 50.184   0.292 485.247 
> length(deg)
[1] 172258
> system.time({
+ queryt =  "
+ MATCH (n:User)-[r:REPLIED]->(p:Topic)
+ WITH count(*) as weight,p.id as pid
+ RETURN pid,weight
+ order by weight desc
+ "
+ datat = cypher(neo4j, queryt)
+ 
+ print('completed degree')
+ save(datat, file="degree_topic.Rdata")
+ print('writing Topic in neo4j...')
+ for(i in 1:nrow(datat))
+ {
+     unode = getLabeledNodes(neo4j, "Topic", id = as.integer(datat$pid[i<odes(neo4j, "Topic", id = as.integer(datat$pid[i]                       ))
+     updateProp(unode[[1]],degree = as.numeric(datat$weight[i]))
+ }
+ })
[1] "completed degree"
[1] "writing Topic in neo4j..."
     user    system   elapsed 
26629.168   933.308 42179.317 
> save(datat,file='topic_degree.Rdata')
> density=graph.density(g, loops=FALSE)
> system.time(){)})d})e})n})s})i})t})y})=})g})r})a})p})h}).})d})e})n})s})i})t})y})(})g}),}) })l})o})o})p})s})=})F})A})L})S})E}))})
   user  system elapsed 
  0.000   0.000   0.001 
> system.time({density=graph.density(g, loops=FALSE)})>                                                     > density
[1] 0.0001262028
> à¸žà¸—  rm density
Error: unexpected symbol in "rm density"
> rm density> rm density)> r> rm> rm > rm d> rm de> rm den> rm den> rm dens> rm densi> rm densitdensity) > rm(density)> rm(
> rm(density)> rm density > density   > system.time({density=graph.density(g, loops=FALSE)})
   user  system elapsed 
  0.000   0.000   0.001 
> system.time({density=graph.density(g, loops=FALSE)})> rm(density)                                         > rm(density)> rm density 
Error: unexpected symbol in "rm density"
> rm density> system.time({density=graph.density(g, loops=FALSE)})> rm(density)                                         > rm(density)> rm density > density   
[1] 0.0001262028
> 
Save workspace image? [y/n/c]: y
^[[A^[[A^[[A^[[A^[[A^[[A^[[A^[[A^[[A^[[A^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B                                                                                                                                                                                Fony@gke-cluster-r-5ad41d3a-node-yekg:~/rneo4j-centrality$ exit

Script done on Thu 24 Mar 2016 04:27:11 PM UTC
